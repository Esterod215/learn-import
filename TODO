todo:

-   handling other languages
-   handle all projects
-   sync process
-   vue logic - landing page icons
-   think through external reference code logic again - is hashing the page the right idea or just base64? - also in view of different product sections (commerce vs dxp)
-   handle zip files
-   discrepancy between articles found via api and those in system
-   better handling of images (not all of them are getting referenced)
-   go through all edge cases that rich identified
-   webdav also works to upload documents - and can overwrite them with new versions (do we want that?)
-   use parallel processing- -- cloud tasks?
-   hash content in custom field for syncing?
-   use freemarker for display
-   ja vs en images
-   deleting unneeded images / articles
-   find sphinx way to fix images? https://github.com/sphinx-doc/sphinx/blob/65f548e6ee968f6183f3dcbbdf999268a6c9b257/sphinx/builders/__init__.py
    test
-                       importing all images took 26 minmutes
                    	pages - 20 minutes

some pages are now broken: https://learn-uat.lxc.liferay.com/web/learn-python-import/w/commerce/store-management/installation-and-upgrades.html
add link to compare original
missing styling for commands on https://learn-uat.lxc.liferay.com/web/learn-python-import/w/dxp-cloud/migrating-to-dxp-cloud/matching-dxp-versions.html

logic for README / index.html -- do we need that?
added service access policy for add-file-entry

try out /v1.0/sites/{siteId}/documents/by-external-reference-code/{externalReferenceCode}

json-ws batch mode

https://github.com/liferay/liferay-portal/blob/ba9cff57311cd023f648200e6a9edef8de7ca2df/portal-kernel/src/com/liferay/document/library/kernel/service/DLAppLocalService.java#L110-L150

https://issues.liferay.com/browse/LPP-27448

import numpy as np
array = np.array([2,8,7]).tofile("array.bin")
print(np.fromfile("array.bin", dtype=np.int8))

-   make sure all images resolve

downsides:

-   image names could shift
-   ties us to sphinx, at least at start

urls:

https://learn-uat.lxc.liferay.com/webdav/learn-python-import/document_library/commerce_0152.png

https://learn-uat.lxc.liferay.com/web/learn-python-import/w/_images/0152.png

../../\_images/0152.png

../../\_images/

/webdav/learn-python-import/document*library/commerce*

/webdav/learn-python-import/document_library/commerce_0152.png

conda activate python-3.8.5

ideas:

use publications
create lr file
upload zip of all json files and process on liferay sidebars

how to handle

links in html content

images - all in one directory so we could import all at once

batch import of all images based on filename

web content template could figure out links at runtime?
navigation sections

breadcrumb - parents + plus title

overall navigation -- not sure

handling languages

publish all the articels with some kind of flag related and then publish based on that?
all articles in one folder

how to keep product areas separate for searching

could we use batch planner - is that only for commerce?

use webdav for uploading docs?

Image example:

markdown:

![Authentication](./liferay-commerce-connector-to-punchout2go/images/02.png)

files:

do we need to care about original folder structure of images?
what about images changing / moving around
./docs/commerce/latest/en/add-ons-and-connectors/punchout2go/liferay-commerce-connector-to-punchout2go/images/02.png

./site/build/output/commerce/latest/en/\_images/02.png

./site/build/input/commerce/latest/en/add-ons-and-connectors/punchout2go/liferay-commerce-connector-to-punchout2go/images/02.png
./site/build/input/commerce/latest/ja/add-ons-and-connectors/punchout2go/liferay-commerce-connector-to-punchout2go/images/02.png

jsonhtmlbuilder markup:

<img alt="Authentication" src="../../../_images/02.png" /></p>\n

learn site:

https://learn.liferay.com/commerce/latest/en/_images/02.png

what to do about conflict when updating files - add in logic...

Analyze redirects in learn build

Get redirects working for things like

https://learn.liferay.com/infrastructure-and-operations/networking/custom-domains.html

(en) prefix -- add through api in redirect section?
